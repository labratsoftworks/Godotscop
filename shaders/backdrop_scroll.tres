[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=2]
uniform_name = "VectorUniform2"

[sub_resource type="VisualShaderNodeTexture" id=3]

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[sub_resource type="VisualShaderNodeVec3Uniform" id=7]
uniform_name = "VectorUniform"

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[resource]
code = "shader_type spatial;
render_mode unshaded, shadows_disabled;

uniform vec3 VectorUniform;
uniform vec3 VectorUniform2;
uniform sampler2D tex_frg_13;


void vertex() {
// Output:0

}

void fragment() {
// VectorUniform:8
	vec3 n_out8p0;
	n_out8p0 = VectorUniform;

// Input:5
	float n_out5p0;
	n_out5p0 = TIME;

// VectorOp:9
	vec3 n_out9p0;
	n_out9p0 = n_out8p0 * vec3(n_out5p0);

// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(SCREEN_UV,0.0);

// VectorUniform:12
	vec3 n_out12p0;
	n_out12p0 = VectorUniform2;

// VectorOp:11
	vec3 n_out11p0;
	n_out11p0 = n_out3p0 * n_out12p0;

// VectorOp:7
	vec3 n_out7p0;
	n_out7p0 = n_out9p0 + n_out11p0;

// Texture:13
	vec3 n_out13p0;
	float n_out13p1;
	vec4 tex_frg_13_read = texture( tex_frg_13 , n_out7p0.xy );
	n_out13p0 = tex_frg_13_read.rgb;
	n_out13p1 = tex_frg_13_read.a;

// Output:0
	ALBEDO = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1047, 240 )
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 560, 140 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -620, 360 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -600, 140 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -200, 260 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( -620, 40 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( -340, 80 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -360, 400 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -620, 460 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 100, 140 )
nodes/fragment/connections = PoolIntArray( 8, 0, 9, 0, 5, 0, 9, 1, 9, 0, 7, 0, 7, 0, 13, 0, 13, 0, 0, 0, 12, 0, 11, 1, 3, 0, 11, 0, 11, 0, 7, 1 )
