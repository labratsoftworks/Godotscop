[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "world"

[sub_resource type="VisualShaderNodeTransformVecMult" id=3]

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[resource]
code = "shader_type spatial;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	mat4 n_out4p0;
	n_out4p0 = WORLD_MATRIX;

// Input:9
	vec3 n_out9p0;
	n_out9p0 = vec3(UV,0.0);

// TransformVectorMult:8
	vec3 n_out8p0;
	n_out8p0 = ( n_out4p0 * vec4(n_out9p0, 1.0) ).xyz;

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture( TextureUniform , n_out8p0.xy );
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -717.333, 59.5833 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -20, 300 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( -680, 220 )
nodes/fragment/8/node = SubResource( 3 )
nodes/fragment/8/position = Vector2( -400, 280 )
nodes/fragment/9/node = SubResource( 4 )
nodes/fragment/9/position = Vector2( -740, 300 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 4, 0, 8, 0, 8, 0, 2, 0, 9, 0, 8, 1 )

